---
- when: "hostvars[host].get('boot_docker_image', False)"
  delegate_to: localhost
  block:
    - name: Create containers
      docker_container:
        name: '{{ boot_docker_host|default(host) }}'
        hostname: '{{ boot_docker_host|default(host) }}'
        command: '{{Â hostvars[host]["boot_docker_command"]|default(omit) }}'
        image: '{{ hostvars[host]["boot_docker_image"] }}'
        networks:
          - name: "{{ boot_docker_network|default(omit) }}"
        purge_networks: true
        # These are non privileged container running systemctl, see:
        # https://developers.redhat.com/blog/2016/09/13/running-systemd-in-a-non-privileged-container/
        security_opts: seccomp=unconfined  # required on Debian
        tmpfs:
          - /tmp
          - /run
          - /run/lock
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup:ro

    - name: update inventory
      add_host:
        name: '{{ host }}'
        ansible_host: '{{ boot_docker_host|default(host) }}'
        groups: '{{ hostvars[host]["group_names"] }}'
        ansible_connection: docker
        ansible_user: root
        inventory_dir: "{{ hostvars[host]['inventory_dir'] }}"
      changed_when: false
